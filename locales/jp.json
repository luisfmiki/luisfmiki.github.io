{
  "/index.html": {
    "home": "ホーム",
    "projects": "プロジェクト",
    "about": "自己紹介",
    "hello": "こんにちは！ ^_^<br>ルイス・フェルナンドです。<br> 組み込み開発者",
    "ido": "組み込みシステムの開発と保守を行っています。つまり、電化製品、自動車、医療、科学、防衛機器などを制御するソフトウェアやハードウェアです。",
    "contact": "詳細については、<a href=\"mailto:luisfmiki@gmail.com\">luisfmiki@gmail.com</a> &nbsp;までお気軽にお問い合わせください <i class=\"fa-regular fa-envelope\"></i>"
  },
  "/projects/index.html": {
    "home": "ホーム",
    "projects": "プロジェクト",
    "about": "自己紹介",
    "1": {
      "title": "デジタル屈折メーター",
      "keywords": "C、タイマー、光学、計器、ATmega328、フォトダイオード",
      "shortdescription": "屈折メーターは液体の屈折率を測定する装置であり、光の進む経路が真空と比較してどれだけ曲がるかを示します。主に液体製品の品質管理に使用されます。このプロジェクトではこの装置の低コストなデジタル版が紹介されています。"
    },
    "2": {
      "title": "UaiKey v2",
      "keywords": "C++、IoT、ESP8266、RFID、暗号化、LabVIEW、TCP/IP",
      "shortdescription": "UaiKeyは組み込みドアロックとデスクトップ管理コントロールパネルから構築されたアクセス制御システムです。このシステムはインターネットアクセスがあらゆる場所から組み込みデバイスにリモートでアクセスできます。デバイス間の通信と取引はセキュリティで保護されています。"
    },
    "3": {
      "title": "MeuLab",
      "keywords": "C++、ESP8266、WebSockets、センサー、IoT、LabVIEW、信号処理",
      "shortdescription": "MeuLabはさまざまなセンサーを受け入れる組み込みプラットフォームです。同時に複数の物理量のデータを測定、プロット、および分析できます。デスクトップやモバイルアプリと無線通信し結果を表示します。"
    },
    "4": {
      "title": "ガラスのドア",
      "keywords": "IoT、オートメーション、ESP8266、電子工学",
      "shortdescription": "これは私の最初の組み込みプロジェクトです。COVIDパンデミック2年目に住居用ビルのドアロックを改造しました。スマートフォンを使用して住人のみがドアを開けられるようにしました。"
    },
    "5": {
      "title": "電圧源",
      "keywords": "PCB、エレクトロニクス、デジタル、アナログ",
      "shortdescription": "電子回路実験の学部プロジェクト。電力ソースから供給される-15Vから+15Vまで変動する電圧源が紹介されています。デジタル過電流保護付き。"
    },
    "6": {
      "title": "顕微鏡のアナロジー",
      "keywords": "C、制御工学、信号処理、走査プローブ、SEM、STM、AFM",
      "shortdescription": "開発中のプロジェクト"
    },
    "keyword": "キーワード: ",
    "type": "タイプ: ",
    "science": "科学的 ",
    "tech": "テクニカル ",
    "hobby": "趣味 ",
    "school": "学術 ",
    "seedetail": "プロジェクトの詳細を見る <i class=\"fa-solid fa-circle-info\"></i>"
  },
  "/projects/digital-refractometer/index.html": {
    "home": "ホーム",
    "projects": "プロジェクト",
    "about": "自己紹介",
    "name": "デジタル屈折メーター",
    "keywords": "C、PWM、タイマー、光学、計器、ATmega328、フォトダイオード",
    "title": "デジタル屈折メーター <i class=\"fa-solid fa-camera\"></i>",
    "objective": "<b>目標 &nbsp;</b>低コストで精密なデジタル屈折メーターを構築し、人間の生体サンプルを特徴づける自動化プロセスでデータ収集装置として使用する。",
    "requirements": "<b>要件 </b><ol><li>デバイスはサンプルと室温の屈折率を測定する必要があります。</li><li>少なくとも3つの異なる光波長が利用可能である必要があります。</li><li>デバイスは.csv形式で測定結果のレポートを提供するだけでなく、ディスプレイを介して現在の測定値を表示する必要があります。</li></ol>",
    "role": "<b>役割 &nbsp</b>エレクトロニクスおよびファームウェア",
    "process": "<b>開発プロセスと要件の達成 </b><br><b>要件 #1</b><br>まず、GeoGebraを使用して光学部品の位置を取得するために問題の光学モデリングを行いました。その後、ICリニアCCDセンサーをプログラムして光の強度の値を取得しました。このタスクでは、ATmega328pの3/3のタイマーを使用して、ICのデータシートで指示されている信号波形を満たすためにPWMを生成しました（必要ならば、他のマイクロコントローラを選択）。また、光の強度信号とNTCサーミスタを介して温度を読み取るために2つのADCピンを使用しました。光の強度対位置を使用して、光学幾何モデルとスネルの法則を使用して屈折率を達成しました。<br><b>要件 #2</b><br>3つの異なる色のSMD LEDを光学コンポーネントとして使用したPCBを製作しました。一度に1つの色（波長）が点灯します。したがって、ボタンを押すと色が変わるようにプログラムしました。<br><b>要件 #3</b><br>LabVIEWを使用して、USBケーブルを介してデバイスに接続され、データをエクスポートするための簡単なデスクトップインターフェースをプログラムしました。データはユーザーが長い一連の測定の後に収集することを選択できるように、マイクロコントローラのフラッシュメモリに保存されます。結果を表示するために、AdafruitのSSD1306 OLEDライブラリを使用しましたが、Adafruitのライブラリをバイパスして低電力を実現する必要がありました。低電力について言えば、一定の時間経過後にArduinoをスリープ状態にし、外部割り込みといくつかのアセンブリコードを使用して特定の命令の順序を確実にするために、スリープ/ウェイクアップボタンもプログラムしました。",
    "problems": "<b>問題と対策</b><ul><li>なぜかCDDのアナログ信号はかなりランダムでした。ICのデータシートで指示されている通りにデジタル信号が正確であることを確認しても、ある程度の時間が経過するまで、信号が浮動しているようでした。その後、ADCピンとICのアナログピンの間にプルダウン抵抗を入れてみました。最終的にはアナログ値が一貫していましたが、この抵抗はICのデータシートの使用方法の指示のどこにも記載されていませんでした。</li></ul>",
    "imgdescription1": "<a href=\"https://eitaufmg.wixsite.com/eita\">EITA!</a>で製作されたデジタル屈折メーターのプロトタイプ",
    "imgdescription2": "使用されたICリニアCCDセンサーTSL1401CL",
    "imgdescription3": "GeoGebraを使用してプログラムされたアクリルプリズムの光学モデル"
    },
  "/projects/uaikey/index.html": {
    "home": "ホーム",
    "projects": "プロジェクト",
    "about": "自己紹介",
    "name": "uaikey",
    "keywords": "C++, IoT, ESP8266, RFID, 暗号化, LabVIEW, TCP/IP",
    "title": "UaiKey v2 &nbsp;<i class=\"fa-solid fa-building-lock\"></i>",
    "objective": "<b>目的 &nbsp; </b>物理学部で鍵の紛失が問題になり、研究室のための低コストなアクセス制御システムを構築する必要が生じました。",
    "requirements": "<b>要件 </b><ol><li>アクセス制御は大学のIDカードを使用します。</li><li>研究室の管理者向けのデスクトップアプリケーションが必要です。</li><li>システム全体のデバイス間のワイヤレス通信が必要です。</li></ol>",
    "role": "<b>役割 &nbsp; </b>組み込みおよびデスクトップソフトウェア",
    "process": "<b>開発プロセスと要件の検討 </b><br>システムの第2バージョンで働いていたので、基本的にはすべての要件が既に満たされていましたが、元のプログラマーは利用できませんでした。したがって、私がほとんど行ったのは、逆エンジニアリング、コードのリファクタリング、および最適化でした。たとえば、暗号化アルゴリズムはすべての通信メッセージでNバイトのキーの最初のバイトしか使用していなかった😱、それは混乱していました。したがって、私はゼロからクリプトコードを再構築することに決定しました。彼を非難していません。彼がC++を学んだ直後にこのシステムをコーディングしたと聞いています。また、デスクトップアプリのすべてはC++ Qtライブラリの上にありましたが、EITA！でかなり使用されているLabVIEWを使用してそれを作り直すことにしました。その他にも新しい機能を追加し、物理学部のクリーンルームで使用する部屋内の人数を表示するために組み込みコード内にステートマシンを実装する予定です。<br>このプロジェクトは小さくないため、ハードウェアの使用や技術的な側面に関する質問については直接私にお問い合わせいただくことをお勧めします。このプロジェクトの初版の詳細なページは<a href=\"https://eitaufmg.wixsite.com/eita/uaikey\">こちら</a> - ポルトガル語。",
    "problems": "<b>問題と克服 </b><ul><li>埋め込みデバイスが通信トランザクションの途中で応答しなくなる致命的な問題がありました。これは、電源が遮断されたり予測不可能なコードシーケンスのバグがあると、通信デバイスとリモートコントロールデバイスの間でメモリリークやデータの不同期が生じる可能性がありました（スーパーループ埋め込みアーキテク）",
    "imgdescription1": "UaiKey v2の埋め込みデバイスでアクセスカードを読み取る",
    "imgdescription2": "UaiKey v2のリモートデスクトップ管理パネル"
    },
  "/projects/meulab/index.html": {
    "home": "ホーム",
    "projects": "プロジェクト",
    "about": "自己紹介",
    "name": "meulab",
    "keywords": "C+、ESP32、WebSockets、センサー、IoT、LabVIEW、信号処理",
    "title": "MeuLab &nbsp;<i class=\"fa-solid fa-flask-vial\"></i>",
    "objective": "<b>目標 <br></b>どの学年の生徒でも実験室の授業で使用できる低コストな組み込みプラットフォームを構築する。学校や大学で取得されます。",
    "requirements": "<b>要件 </b><ol><li>デバイスはさまざまな物理現象の異なるセンサーを受け入れる必要があります。</li><li>デバイスは同時に異なるセンサーからの計測を行う必要があります。</li><li>システムには実験を制御し、分析するためのデスクトップおよびモバイルアプリが必要です。</li></ol>",
    "role": "<b>役割<br> </b>組み込みソフトウェア",
    "process": "<b>開発プロセス </b><br>これらはシステムを定義するトップの要件の3つですが、私は力センサーの統合のみに取り組んでいましたので、それらを言及する価値はありません。したがって、ストレインゲージとHX711アンプを使用した計測回路を組み立て、それをArduinoで読み取るようにしました。このアンプはI2C経由ではなく、独自のプロトコルを持っていますが、幸運にもライブラリがありました。その後、このコードをモジュールに変換し、それをRTOSのタスクとして含めるためにより経験豊富なプログラマに送りました。これは私がEITA!で働く最初のプロジェクトであり、組み込み開発においてはまだ初心者であり、経験豊富なプログラマではありませんでした。",
    "imgdescription1": "磁場、心拍、光、距離のセンサーが搭載されたMeuLab組み込みデバイスのプロトタイプ。すべてのセンサーは組み込みプラットフォームに差し込むことができます。",
    "imgdescription2": "HX711グリーンボードと底面のストレインゲージを備えた力センサー。",
    "imgdescription3": "データをプロットするためのMeuLabモバイルアプリ。"
    },
  "/projects/glass-door/index.html": {
    "home": "ホーム",
    "projects": "プロジェクト",
    "about": "自己紹介",
    "name": "ガラスのドア",
    "keywords": "IoT、オートメーション、ESP8266、電子工学",
    "title": "グラスのドア  <i class=\"fa-solid fa-door-open\"></i>",
    "objective": "<b>目的&nbsp; </b>居住ビルの住民が訪問者を迎えるのを容易にする。",
    "requirements": "<b>問題</b><br>問題は、建物の入り口に2つの扉があったことです。1つはインターホンと物理的な鍵で開けられるメインゲートで、もう1つは物理的な鍵と数字のパスワードでしか開けられないガラス扉でした。住民が訪問者を受け入れる場合、最初の扉を開けるためにインターホンボタンを押し、その後アパートから出てガラス扉を手動で開ける必要がありました。住民が上の階に住んでいる場合、ますます悪化します。つまり、住民は移動する必要があります。したがって、私のアイデアは、この2番目の扉を住民のスマートフォンで開けられるようにすることでした。この方法では、住民はアパートの中にとどまることができます。<br><b>要件 </b><ol><li>共通のガラス扉を住民のスマートフォンで開けられるようにする。</li>",
    "role": "<b>役割 &nbsp;</b>エレクトロニクスおよびファームウェア",
    "process": "<b>開発プロセスと要件の検討</b><br>ESP12-Eの開発ボードを使用して、ドアを開けるような信号を生成しました。回路に示されているように、私は既にインストールされていたアクセス制御を迂回するために、フライバックダイオード付きのパワートランジスタを使用し、それが直接ドアの磁石ロックの共通ノードに接続されていることに気付きました。これにより、私が作成した回路はインストールされたアクセス制御の機能に干渉しませんでした。また、このアクセス制御システムから+12V供給を受けました。スマートフォンでロックを解除するために、IoTクラウドプラットフォームBlinkを使用しました。その後、住民はBlinkアプリをダウンロードし、スマートフォンでボタンを押すだけでドアを開けることができます。最初はESP8266内にhttpサーバーを作成するつもりでしたが、それにはIPポートフォワーディングが必要で、ここでは地元のISPが通常許可しないため、Blinkを選びました。",
    "problems": "<b>問題と克服策: </b><ul><li>最初はトランジスタのベースに1つのパルスでドアを開けようとしていました。それではうまくいきませんでした。しかし、インストールされたアクセス制御がドアを開ける音を聞いた後、アナログピンに約10Hzのパルスを与えることで同じことをしようと思いつきました。それがうまくいきました。その当時、私はなぜこれが機能したのか正確にはわからなかったので、それまでファラデーの法則を勉強したことがありませんでした。</li>",
    "imgdescription1": "ESP12-Eがそれを左に迂回することでインストールされたアクセス制御が開いた。右側にはガラス扉があります。",
    "imgdescription2": "上記の回路のスケマティック。アクセス制御回路は表示されていません。",
    "imgdescription3": "状況を示すダイアグラム。"
    },
  "/projects/voltage-source/index.html": {
    "home": "ホーム",
    "projects": "プロジェクト",
    "about": "自己紹介",
    "name": "電圧源",
    "keywords": "PCB、エレクトロニクス、デジタル、アナログ",
    "title": "電圧源 &nbsp;<i class=\"fa-solid fa-bolt\"></i>",
    "objective": "<b>目的 &nbsp;</b><br>直流電圧源電源を実験室の最終プロジェクトとして構築する。",
    "requirements": "<b>要件</b><ol><li>-15Vから+15Vの範囲で電圧を供給できること。</li><li>1Aを超える過電流のための保護機能を備えていること。</li><li>自体を127Vrmsの消費者電力グリッドから給電できること。</li></ol>",
    "role": "<b>役割&nbsp;</b><br>回路設計、PCB設計、およびはんだ付け。",
    "process": "<b>開発プロセスと要件の達成 </b><br>このプロジェクトでは、ラボのペアと一緒に作業していたため、同じ役割でした。基本的に、プロジェクトの各ステップごとに作業量を分割しました。最初に、理論的なクラスで見られるように、すべての機能ブロックを計算して回路を設計し始めました。第3の要件は整流回路を使用することで簡単に達成されました。電圧範囲の要件は、ポテンショメーター、いくつかのオペアンプステージ、およびフィードバックループのトランジスタを使用して達成されました。過電流保護は、シャント抵抗、オペアンプステージ、およびトランジスタをスイッチングするためのCD4013BEデュアルDフリップフロップを使用して達成されました。その後、PCBを描き、回路の部品をはんだ付けしてテストしました。これらの最後の2つのステップが最も時間がかかりました。",
    "problems": "<b>問題と対処 </b><ul><li>PCBの設計後、CNCマシンを制御するコンピュータがランダムに再起動し始めました。この障害により、CNCは加工プロセスで元の(X,Y)参照を失いました。その結果、私のボードは経路が乱れ、その後ボードは使用不可能になりました。そのため、既存の非常用ボードに切り替える必要がありました。その後、このボードの回路図を調べていくつかの異なるコンポーネントをはんだ付けましたが、適応を行いながら購入したコンポーネントを使用しました。例えば、この非常ボードは2.1Vの供給を規制するためにゼナーを使用していましたが、私たちは3つの1N4148を使用して1つのゼナーの場所にすべてをはんだ付けしました。</li></ul>",
    "imgdescription1": "完全なプロジェクト回路図",
    "imgdescription2": "PCBの底面",
    "imgdescription3": "電圧源の出力を抵抗負荷でテスト中"
    },
  "/projects/microscopy-analogies/index.html": {
    "name": "顕微鏡のアナロジー",
    "keywords": "C、制御工学、信号処理、走査プローブ、SEM、STM、AFM"
  }, 
  "/about/index.html": {
    "home": "ホーム",
    "projects": "プロジェクト",
    "about": "自己紹介",
    "text1": "電気工学専攻で主にマイクロエレクトロニクスに焦点を当てています。私はミナスジェライス連邦大学「UFMG」の学部生で、ミクストシグナル・エレクトロニクス、光学、電気自動車、ナノテクノロジー、人工知能、コンピューター・アーキテクチャなどの技術と科学に非常に興味を持っています。\nこれらのトピックを学ぶ楽しさに加えて、研究動機は私たちの周りの物理的現象がどのように作用するかを理解し、この理解を基に人類の技術的進歩に貢献することから来ています。",
    "lab1description": "UFMGのアナログおよびデジタルエレクトロニクスの教育研究室",
    "text2": "現在は趣味のプロジェクトの他に、組み込みの経験は主に大学の技術学習スペースである　「EITA!」から来ています。このスペースでは、他の学部生と共に主に科学機器と物理デモを作成しています。EITA!は手を動かして学ぶには最適な環境だと思っているけれども、2024年にインターンシップをする予定です。\nこのページの写真は私が学ぶしている場所の一部を示しています。",
    "lab2description": "EITA!のプロトタイピングエリア",
    "text3": "スキルに関しては「プロジェクト」のページを見ていただくとより深く理解できるかもしれませんが、簡単にまとめると、現在以下の分野に知識を有しています。",
    "lab3description": "EITA!のワークショップエリア",
    "proglang": "プログラミング言語: ",
    "tools": "ツール: ",
    "ll-hw": "低レベル・ハードウェア: "
  }
}
